{"version":3,"sources":["RecipeTile.js","App.js","reportWebVitals.js","index.js"],"names":["RecipeTile","recipes","match","className","onClick","window","open","src","App","useState","query","setQuery","setRecipes","healthLabel","sethealthLabel","url","a","Axios","get","result","data","hits","console","log","onSubmit","e","preventDefault","getRecipes","type","placeholder","value","onChange","target","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAIe,SAASA,EAAT,GAAgC,IAAXC,EAAU,EAAVA,QAChC,OACgE,MAA5DA,EAAO,OAAP,MAA2BC,MAAM,0BACjC,sBAAKC,UAAU,aAAaC,QAAS,WACjCC,OAAOC,KAAKL,EAAO,OAAP,MADhB,UAGA,qBAAKE,UAAU,kBAAkBI,IAAKN,EAAO,OAAP,QACtC,oBAAGE,UAAU,mBAAb,cAAkCF,EAAO,OAAP,YCyC3BO,MA/Cf,WACE,MAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,mBAAS,IAAvC,mBAAOR,EAAP,KAAgBW,EAAhB,KACA,EAAsCH,mBAAS,SAA/C,mBAAOI,EAAP,KAAoBC,EAApB,KAEIC,EAAG,0CAAsCL,EAAtC,iGAAoIG,GAL9H,4CAOb,4BAAAG,EAAA,sEACqBC,IAAMC,IAAIH,GAD/B,OACMI,EADN,OAEEP,EAAWO,EAAOC,KAAKC,MACvBC,QAAQC,IAAIJ,EAAOC,MAHrB,4CAPa,sBAiBb,OACE,sBAAKjB,UAAU,MAAf,UACC,gEACA,uBAAMA,UAAU,kBAAkBqB,SARpB,SAACC,GAChBA,EAAEC,iBAbS,mCAcXC,IAMC,UACE,uBAAOC,KAAK,OAAOzB,UAAU,aAAa0B,YAAY,mBAAmBC,MAAOpB,EAAOqB,SAAU,SAACN,GAAD,OAAOd,EAASc,EAAEO,OAAOF,UACzH,uBAAOF,KAAK,SAASzB,UAAU,cAAc2B,MAAM,WACnD,yBAAQ3B,UAAU,oBAAlB,UACA,wBAAQC,QAAS,kBAAMU,EAAe,UAAtC,mBACA,wBAAQV,QAAS,kBAAMU,EAAe,eAAtC,wBACA,wBAAQV,QAAS,kBAAMU,EAAe,UAAtC,mBACA,wBAAQV,QAAS,kBAAMU,EAAe,eAAtC,wBACA,wBAAQV,QAAS,kBAAMU,EAAe,gBAAtC,yBACA,wBAAQV,QAAS,kBAAMU,EAAe,eAAtC,wBACA,wBAAQV,QAAS,kBAAMU,EAAe,aAAtC,sBACA,wBAAQV,QAAS,kBAAMU,EAAe,gBAAtC,yBACA,wBAAQV,QAAS,kBAAMU,EAAe,kBAAtC,2BACA,wBAAQV,QAAS,kBAAMU,EAAe,aAAtC,sBACA,wBAAQV,QAAS,kBAAMU,EAAe,cAAtC,uBACA,wBAAQV,QAAS,kBAAMU,EAAe,mBAAtC,kCAGH,qBAAKX,UAAU,eAAf,SACCF,EAAQgC,KAAI,SAAChC,GACb,OAAO,cAAC,EAAD,CAAYA,QAASA,aCjCnBiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a486a619.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/alt-text */\r\nimport React from 'react';\r\nimport \"./RecipeTile.css\";\r\n\r\nexport default function RecipeTile({recipes}) {\r\n    return (\r\n        recipes[\"recipe\"][\"image\"].match(/\\.(jpeg|jpg|gif|png)$/)!= null && (\r\n        <div className=\"recipeTile\" onClick={()=> {\r\n            window.open(recipes[\"recipe\"][\"url\"])\r\n        }}>\r\n        <img className=\"recipeTile__img\" src={recipes[\"recipe\"][\"image\"]} />\r\n        <p className=\"recipeTile__name\"> {recipes[\"recipe\"][\"label\"]}</p>\r\n        </div>\r\n        )\r\n    )\r\n}\r\n","import './App.css';\nimport Axios from \"axios\";\nimport { useState } from \"react\";\nimport RecipeTile from './RecipeTile';\n\nfunction App() {\n  const [query , setQuery] = useState(\"\");\n  const [recipes, setRecipes] = useState([])\n  const [healthLabel, sethealthLabel] = useState(\"vegan\")\n\n  var url = `https://api.edamam.com/search?q=${query}&app_id=a67242a1&app_key=d0ce39c13ac9b80799d1300c55832e3b&&health=alcohol-free&health=${healthLabel}`;\n\n  async function getRecipes(){\n    var result = await Axios.get(url);\n    setRecipes(result.data.hits);\n    console.log(result.data);\n  }\n  const onSubmit = (e) => {\n    e.preventDefault();\n    getRecipes();\n  }\n\n  return (\n    <div className=\"app\">\n     <h1 >Food Recipe Plaza üçî</h1>\n     <form className=\"app__searchForm\" onSubmit={onSubmit}>\n       <input type=\"text\" className=\"app__input\" placeholder=\"enter ingridient\" value={query} onChange={(e) => setQuery(e.target.value)}/>\n        <input type=\"submit\" className=\"app__submit\" value=\"Search\" />\n        <select className=\"app__healthLabels\">\n        <option onClick={() => sethealthLabel(\"vegan\")}>vegan</option>\n        <option onClick={() => sethealthLabel(\"vegetarian\")}>vegetarian</option>\n        <option onClick={() => sethealthLabel(\"paleo\")}>paleo</option>\n        <option onClick={() => sethealthLabel(\"dairy-free\")}>dairy-free</option>\n        <option onClick={() => sethealthLabel(\"gluten-free\")}>gluten-free</option>\n        <option onClick={() => sethealthLabel(\"wheat-free\")}>wheat-free</option>\n        <option onClick={() => sethealthLabel(\"egg-free\")}>egg-free</option>\n        <option onClick={() => sethealthLabel(\"peanut-free\")}>peanut-free</option>\n        <option onClick={() => sethealthLabel(\"tree-nut-free\")}>tree-nut-free</option>\n        <option onClick={() => sethealthLabel(\"soy-free\")}>soy-free</option>\n        <option onClick={() => sethealthLabel(\"fish-free\")}>fish-free</option>\n        <option onClick={() => sethealthLabel(\"shellfish-free\")}>shellfish-free</option>\n        </select>\n     </form>\n     <div className=\"app__recipes\">\n     {recipes.map((recipes) => {\n      return <RecipeTile recipes={recipes} />\n     })}\n     </div>\n     </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}